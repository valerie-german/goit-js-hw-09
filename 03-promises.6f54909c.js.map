{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,IAAIC,EAyBJ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAkB,C,SAAEF,E,MAAUC,GAEpC,OAAO,IAAIE,SAAQ,CAACC,EAASC,KAC7BC,YAAW,KACaC,KAAKC,SAAW,GAEnCJ,EAAQF,GAGRG,EAAOH,KAEPD,MAtCMQ,SAASC,cAAc,SAI/BC,iBAAiB,UAAWC,IAC/BA,EAAMC,iBACN,MAAOC,EAAOC,EAAMC,GAAUJ,EAAMK,OAAOC,SACrCC,EAAW,CAAElB,MAAOa,EAAMM,MAAOL,KAAMA,EAAKK,MAAOJ,OAAQA,EAAOI,OAIvEtB,EAAeqB,EAASlB,MAEzB,IAAK,IAAIoB,EAAI,EAAGA,GAAKF,EAASH,OAAQK,GAAK,EACzCtB,EAAcsB,EAAGvB,GACdwB,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MAClBL,EAAA2B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,UAErDwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MACnBL,EAAA2B,OAAOG,QAAQ,sBAAoB1B,QAAeC,UAErDH,EAAe6B,OAAO7B,GAAgB6B,OAAOR,EAASJ","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst form = document.querySelector('.form');\nlet delayCounter;\n\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  const [delay, step, amount] = event.target.elements;  \n  const paramObj = { delay: delay.value, step: step.value, amount: amount.value };\n  \n  // let paramObj = {...event.target.elements};\n  \n   delayCounter = paramObj.delay;\n\n  for (let i = 1; i <= paramObj.amount; i += 1) {    \n    createPromise(i, delayCounter)\n      .then(({ position, delay }) => {\n       Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n       Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delayCounter = Number(delayCounter) + Number(paramObj.step);\n   }\n});\n\n\nfunction createPromise(position, delay) {\n  const promiseParamObj = { position, delay }; \n\n  return new Promise((resolve, reject) => {\n  setTimeout(() => { \n    const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n       resolve(promiseParamObj);\n      }\n      else {\n       reject(promiseParamObj);\n      } \n    }, delay)\n }); \n}\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayCounter","$47d4ff9957288465$var$createPromise","position","delay","promiseParamObj","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","target","elements","paramObj","value","i","then","Notify","success","catch","failure","Number"],"version":3,"file":"03-promises.6f54909c.js.map"}